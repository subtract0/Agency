[mypy]
# Strict type checking configuration for Agency OS
# Constitutional Law #2: Strict typing always enforced

# Python version
python_version = 3.12

# Import discovery
files = .
exclude = ^(venv/|\.venv/|build/|dist/|\.git/|__pycache__/|\.pytest_cache/|logs/|data/|\.guardian/|refactoring/|tests/unit/conftest\.py)

# Strict mode settings
strict = True
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_any_unimported = False
disallow_any_expr = False
disallow_any_decorated = False
disallow_any_explicit = False
disallow_any_generics = True
disallow_subclassing_any = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

# Error output
show_error_codes = True
show_column_numbers = True
pretty = True

# Performance
incremental = True
cache_dir = .mypy_cache

# Third party libraries without stubs
[mypy-agency_swarm.*]
ignore_missing_imports = True
disallow_subclassing_any = False

[mypy-openai_agents.*]
ignore_missing_imports = True

[mypy-litellm.*]
ignore_missing_imports = True

[mypy-dulwich.*]
ignore_missing_imports = True

[mypy-html2text.*]
ignore_missing_imports = True

[mypy-watchdog.*]
ignore_missing_imports = True

[mypy-sklearn.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

[mypy-flask.*]
ignore_missing_imports = True

[mypy-nbformat.*]
ignore_missing_imports = True

[mypy-jupyter.*]
ignore_missing_imports = True

# Gradual typing exceptions - temporary relaxed rules for high-violation modules
# These exceptions enable Constitutional Law #2 enforcement on new code while
# allowing gradual migration of legacy code. Remove these as violations are fixed.

# Critical legacy modules with 100+ violations (temporary exceptions)
[mypy-examples.test_calculator_healed]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False
disallow_any_generics = False

[mypy-pattern_intelligence.coding_pattern]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_agent.tools.extract_insights]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_agent.tools.analyze_session]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_loop.pattern_extraction]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_loop.__init__]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-tools.telemetry.enhanced_aggregator]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_agent.tools.cross_session_learner]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_agent.tools.consolidate_learning]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-agency_memory.swarm_memory]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_agent.tools.self_healing_pattern_extractor]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-tools.telemetry.aggregator_enterprise]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-learning_agent.tools.store_knowledge]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-pattern_intelligence.intelligence_metrics]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

# Broader module patterns for gradual migration
[mypy-agency_memory.*]
disallow_untyped_defs = False
warn_return_any = False

[mypy-tools.*]
disallow_untyped_defs = False
warn_return_any = False

[mypy-demos.*]
disallow_untyped_defs = False
warn_return_any = False

[mypy-examples.*]
disallow_untyped_defs = False
warn_return_any = False

[mypy-tests.*]
disallow_untyped_defs = False
warn_return_any = False

# Legacy learning modules under gradual migration
[mypy-learning_agent.*]
disallow_untyped_defs = False
warn_return_any = False

[mypy-learning_loop.*]
disallow_untyped_defs = False
warn_return_any = False

[mypy-pattern_intelligence.*]
disallow_untyped_defs = False
warn_return_any = False

# Main orchestrator - temporary relaxed rules due to complex JSON handling
[mypy-agency]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

# Shared utilities - temporary relaxed rules for complex utility functions
[mypy-shared.*]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

# Top-level scripts and standalone files - temporary relaxed rules
[mypy-run_tests]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-launch_autonomous]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-launch_autonomous_migration]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-autonomous_soak_test]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-run_learning_demo]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

[mypy-demo_unified]
disallow_untyped_defs = False
warn_return_any = False
check_untyped_defs = False

# IMPORTANT: Core agent modules remain strictly typed
# NO exceptions should be added for:
# - auditor_agent.* (core agent)
# - merger_agent.* (core agent)
# - chief_architect_agent.* (core agent)